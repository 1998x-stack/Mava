name: push-docker-container

on: push
# on:
#   push:
#     branches: [develop]
#   pull_request:
#     branches: [develop]


jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2

      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      # Tags for branchs
      -
        name: Docker branch meta
        if: github.ref != 'refs/heads/develop'
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            instadeepct/mava
          # generate Docker tags based on the following events/attributes
          tags: |
            tf-core-${{ steps.vars.outputs.sha_short }}
            pz-${{ steps.vars.outputs.sha_short }}
            sc2-${{ steps.vars.outputs.sha_short }}
            flatland-${{ steps.vars.outputs.sha_short }}
            robocup-${{ steps.vars.outputs.sha_short }}
            openspiel-${{ steps.vars.outputs.sha_short }}
            meltingpot-${{ steps.vars.outputs.sha_short }}

      # # Tags for PR to Dev
      # -
      #   name: Docker dev meta
      #   if: github.ref == 'refs/heads/develop'
      #   id: meta
      #   uses: docker/metadata-action@v3
      #   with:
      #     # list of Docker images to use as base name for tags
      #     images: |
      #       instadeepct/mava
      #     # generate Docker tags based on the following events/attributes
      #     tags: |
      #       tf-core-latest
      #       pz-latest
      #       sc2-latest
      #       flatland-latest
      #       robocup-latest
      #       openspiel-latest
      #       meltingpot-latest

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      -
        name: Build and push image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          target: ${{ steps.meta.outputs.labels }}
          label: ${{ steps.meta.outputs.labels }}
